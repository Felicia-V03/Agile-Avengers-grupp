import { getElements } from "../utils/domUtils.js";


let slideIndex = 0;
let slideInterval;

export function initSlider() {
    let slides = getElements(".slide");
    
    if (slides.length === 0) {
        console.error("üö® Inga slides hittades! Kontrollera att HTML-koden √§r korrekt.");
        return;
    }

    showSlides(slideIndex);
    startAutoSlide();
}

export function showSlides(index) {
    let slides = getElements(".slide");
    let dots = getElements(".dot");

    if (slides.length === 0) {
        console.error("üö® Fel: Det finns inga slides att visa.");
        return;
    }

    // Justera index om det √§r utanf√∂r gr√§nserna
    if (index >= slides.length) { slideIndex = 0; }
    if (index < 0) { slideIndex = slides.length - 1; }

    // D√∂lj alla slides
    slides.forEach(slide => slide.style.display = "none");

    // Ta bort "active" fr√•n alla prickar
    dots.forEach(dot => dot.classList.remove("active"));

    // ‚úÖ S√§kerhetskontroll innan vi √§ndrar `style.display`
    if (slides[slideIndex]) {
        slides[slideIndex].style.display = "block";
        dots[slideIndex]?.classList.add("active"); // `?.` undviker fel om dots saknas
    } else {
        console.error("üö® Fel: slides[" + slideIndex + "] √§r undefined!");
    }
}

// Funktion f√∂r att byta till n√§sta/f√∂reg√•ende slide
export function changeSlide(n) {
    slideIndex += n;
    showSlides(slideIndex);
    resetAutoSlide();
}

// Funktion f√∂r att starta automatisk bildv√§xling
export function startAutoSlide() {
    stopAutoSlide();
    slideInterval = setInterval(() => {
        slideIndex++;
        showSlides(slideIndex);
    }, 3000); // Byt bild var 3:e sekund
}

// Funktion f√∂r att stoppa automatisk bildv√§xling
export function stopAutoSlide() {
    clearInterval(slideInterval);
}

// √Öterst√§ll automatisk bildv√§xling efter manuell interaktion
export function resetAutoSlide() {
    stopAutoSlide();
    startAutoSlide();
}
